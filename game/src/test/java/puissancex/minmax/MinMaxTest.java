package puissancex.minmax;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class MinMaxTest {
    @Test
    void testCopyBoard() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','-'},
            {'-','-','-','-','O','-','-'},
            {'-','-','-','O','-','-','-'},
            {'-','-','O','-','-','-','-'}
        };
        assertNotSame(jeu, ai.copyBoard(jeu));
    }

    @Test
    void testPlayIa() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-'}
        };
        assertNotSame(jeu, ai.playIa(jeu, 0, 'O'));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-'}
        };
        assertNotSame(jeu2, ai.playIa(jeu2, 0, 'O'));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-'}
        };
        assertNotSame(jeu3, ai.playIa(jeu3, 0, 'O'));

        char[][] jeu4 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertNotSame(jeu4, ai.playIa(jeu4, 0, 'O'));
    }

    @Test
    void testVerificationWinLine() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'O','O','O','O','-','-','-'}
        };
        assertEquals(100, ai.verificationWinLine(jeu, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'X','X','X','X','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinLine(jeu2, 4));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'X','X','-','-','O','O','-'}
        };
        assertEquals(0, ai.verificationWinLine(jeu3, 4));

        char[][] jeu4 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','O','O','O','O','O','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinLine(jeu4, 5));

        char[][] jeu5 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'X','X','X','X','X','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinLine(jeu5, 5));

        char[][] jeu6 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','X','O','O'},
            {'-','-','-','-','-','-','-','-'},
            {'O','X','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinLine(jeu6, 5));

        char[][] jeu7 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'O','O','O','O','O','O','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinLine(jeu7, 6));

        char[][] jeu8 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','X','X','X','X','X','X'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinLine(jeu8, 6));

        char[][] jeu9 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'O','X','O','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','O','X','X','X'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinLine(jeu9, 6));

        char[][] jeu10 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','O','O','O','O','O','O','O','O','O','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinLine(jeu10, 10));

        char[][] jeu11 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','X','X','X','X','X','X','X','X','X','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinLine(jeu11, 10));

        char[][] jeu12 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','O','O','O','O','X','X','O','O','O','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','X','O','X','X','O','X','O','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinLine(jeu12, 10));
    }

    @Test
    void testVerificationWinColumn() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-'},
            {'-','-','O','-','-','-','-'},
            {'-','-','O','-','-','-','-'},
            {'-','-','O','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinColumn(jeu, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-'},
            {'-','X','-','-','-','-','-'},
            {'-','X','-','-','-','-','-'},
            {'-','X','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinColumn(jeu2, 4));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'X','-','-','-','-','O','-'},
            {'X','-','-','-','-','O','-'}
        };
        assertEquals(0, ai.verificationWinColumn(jeu3, 4));

        char[][] jeu4 = {
            {'-','-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinColumn(jeu4, 5));

        char[][] jeu5 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinColumn(jeu5, 5));

        char[][] jeu6 = {
            {'-','-','-','-','-','O','-','-'},
            {'-','-','-','-','-','O','-','-'},
            {'-','-','-','-','-','X','-','-'},
            {'-','X','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-'},
            {'-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinColumn(jeu6, 5));

        char[][] jeu7 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinColumn(jeu7, 6));

        char[][] jeu8 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinColumn(jeu8, 6));

        char[][] jeu9 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','-','X','-','-','-','O','-'},
            {'-','-','O','-','-','-','X','-'},
            {'-','-','-','-','-','-','X','-'},
            {'-','-','-','-','-','-','X','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinColumn(jeu9, 6));

        char[][] jeu10 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinColumn(jeu10, 10));

        char[][] jeu11 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinColumn(jeu11, 10));

        char[][] jeu12 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinColumn(jeu12, 10));
    }

    @Test
    void testVerificationWinDiagonal() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','O','-','-','-'},
            {'-','-','O','-','-','-','-'},
            {'-','O','-','-','-','-','-'},
            {'O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal(jeu, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','X'},
            {'-','-','-','-','-','X','-'},
            {'-','-','-','-','X','-','-'},
            {'-','-','-','X','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal(jeu2, 4));

        char[][] jeu3 = {
            {'-','X','-','-','-','-','-'},
            {'X','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','O'},
            {'-','-','-','-','-','O','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal(jeu3, 4));

        char[][] jeu4 = {
            {'-','-','-','-','O','-','-','-'},
            {'-','-','-','O','-','-','-','-'},
            {'-','-','O','-','-','-','-','-'},
            {'-','O','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal(jeu4, 5));

        char[][] jeu5 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','X','-'},
            {'-','-','-','-','-','X','-','-'},
            {'-','-','-','-','X','-','-','-'},
            {'-','-','-','X','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal(jeu5, 5));

        char[][] jeu6 = {
            {'-','-','-','-','-','-','-','O'},
            {'-','-','-','-','-','-','O','-'},
            {'-','-','-','-','-','X','-','-'},
            {'-','-','X','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal(jeu6, 5));

        char[][] jeu7 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','O','-','-','-','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal(jeu7, 6));

        char[][] jeu8 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-','-','-','-','X','-'},
            {'-','-','-','-','-','-','-','-','-','X','-','-'},
            {'-','-','-','-','-','-','-','-','X','-','-','-'},
            {'-','-','-','-','-','-','-','X','-','-','-','-'},
            {'-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal(jeu8, 6));

        char[][] jeu9 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','X','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal(jeu9, 6));

        char[][] jeu10 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','O','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','O','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal(jeu10, 10));

        char[][] jeu11 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','X','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','X','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','X','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal(jeu11, 10));

        char[][] jeu12 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','-','-','-','-','-','-','-','O','-','-','-'},
            {'-','-','-','-','O','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal(jeu12, 10));
    }

    @Test
    void testVerificationWinDiagonal2() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'O','-','-','-','-','-','-'},
            {'-','O','-','-','-','-','-'},
            {'-','-','O','-','-','-','-'},
            {'-','-','-','O','-','-','-'},
            {'-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal2(jeu, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-'},
            {'-','-','-','-','X','-','-'},
            {'-','-','-','-','-','X','-'},
            {'-','-','-','-','-','-','X'},
            {'-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal2(jeu2, 4));

        char[][] jeu3 = {
            {'-','-','-','-','-','O','-'},
            {'-','-','-','-','-','-','O'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-'},
            {'-','-','X','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal2(jeu3, 4));

        char[][] jeu4 = {
            {'-','-','O','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-'},
            {'-','-','-','-','O','-','-','-'},
            {'-','-','-','-','-','O','-','-'},
            {'-','-','-','-','-','-','O','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal2(jeu4, 5));

        char[][] jeu5 = {
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'X','-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-'},
            {'-','-','X','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-'},
            {'-','-','-','-','X','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal2(jeu5, 5));

        char[][] jeu6 = {
            {'-','-','-','O','-','-','-','-'},
            {'-','-','-','-','O','-','-','-'},
            {'-','-','-','-','-','X','-','-'},
            {'-','-','X','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-'},
            {'-','-','-','-','O','-','-','-'},
            {'-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal2(jeu6, 5));

        char[][] jeu7 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal2(jeu7, 6));

        char[][] jeu8 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'X','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','X','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','X','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal2(jeu8, 6));

        char[][] jeu9 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','X','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','O','-','-','-','-','-'},
            {'X','-','-','-','-','-','-','X','-','-','-','-'},
            {'-','X','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal2(jeu9, 6));

        char[][] jeu10 = {
            {'-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','O','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','O','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','O'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWinDiagonal2(jeu10, 10));

        char[][] jeu11 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'X','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','X','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','X','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-'}
        };
        assertEquals(-400, ai.verificationWinDiagonal2(jeu11, 10));

        char[][] jeu12 = {
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','X','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-'},
            {'-','-','-','-','O','-','-','-','-','-','-','-','-','-','O','-','-'},
            {'-','-','-','-','-','O','-','-','-','-','-','-','-','-','-','O','-'},
            {'-','-','-','-','-','-','O','-','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','X','-','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','O','-','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','X','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-','-'},
            {'-','-','-','-','-','-','-','-','-','-','-','-','O','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWinDiagonal2(jeu12, 10));
    }

    @Test
    void testVerificationWin() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'X','-','X','-','X','-','-'},
            {'-','X','X','X','-','-','-'},
            {'O','O','O','O','-','-','-'},
            {'-','X','X','X','-','-','-'}
        };
        assertEquals(100, ai.verificationWin(jeu, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-'},
            {'-','O','-','X','-','O','-'},
            {'-','-','O','X','O','-','-'},
            {'-','-','O','X','O','O','-'},
            {'-','-','O','-','O','-','-'}
        };
        assertEquals(-400, ai.verificationWin(jeu2, 4));

        char[][] jeu3 = {
            {'-','-','-','X','-','-','-'},
            {'-','O','O','O','X','-','-'},
            {'-','O','X','X','-','-','-'},
            {'X','-','-','X','-','-','-'},
            {'-','-','-','-','O','-','-'},
            {'-','-','-','-','-','-','-'}
        };
        assertEquals(0, ai.verificationWin(jeu3, 4));

        char[][] jeu4 = {
            {'-','-','-','O','-','-','-'},
            {'-','-','X','-','O','-','-'},
            {'-','O','-','-','X','O','-'},
            {'O','-','-','O','X','O','O'},
            {'-','-','-','-','X','-','-'},
            {'-','-','-','-','-','-','-'}
        };
        assertEquals(100, ai.verificationWin(jeu4, 4));
    }

    @Test
    void testMin() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','X','X','X'}
        };
        assertEquals(-400, ai.min(jeu, 0, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','X','X','-'}
        };
        assertEquals(-800, ai.min(jeu2, 0, 4));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','X','-','-'}
        };
        assertEquals(0, ai.min(jeu3, 0, 4));
    }

    @Test
    void testMax() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','O','O','O'}
        };
        assertEquals(100, ai.max(jeu, 0, 4));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','O','O','O','-'}
        };
        assertEquals(200, ai.max(jeu2, 0, 4));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','O','O','-','-'}
        };
        assertEquals(0, ai.max(jeu3, 0, 4));
    }

    @Test
    void testMinMax() {
        MinMax ai = new MinMax();
        char[][] jeu = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','-','-','-'}
        };
        assertEquals(2, ai.minMax(jeu, 0, 4,1));

        char[][] jeu2 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','O','O','O'}
        };
        assertEquals(3, ai.minMax(jeu2, 0, 4,0));

        char[][] jeu3 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','O','O','O','-'}
        };
        assertEquals(2, ai.minMax(jeu3, 0, 4,0));

        char[][] jeu4 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','O','O','O','-'}
        };
        assertEquals(2, ai.minMax(jeu4, 0, 4,0));

        char[][] jeu5 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','X','X','X'}
        };
        assertEquals(3, ai.minMax(jeu5, 0, 4,0));

        char[][] jeu6 = {
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','-','-','-','-'},
            {'-','-','-','X','X','-','-'}
        };
        assertEquals(0, ai.minMax(jeu6, 0, 4,0));
    }
}
